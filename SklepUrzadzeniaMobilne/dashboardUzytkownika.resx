<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>